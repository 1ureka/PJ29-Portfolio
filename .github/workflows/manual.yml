# This is a basic workflow that is manually triggered

name: Manual workflow

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  update-images-urls:
    runs-on: ubuntu-latest

    permissions:
      contents: write
      pages: write     
      id-token: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: 14 # 可以根據你的專案需求選擇Node.js版本

    - name: Install dependencies
      run: npm install

    - name: Update imagesUrls.json
      run: |
        node <<EOF
        const fs = require('fs');
        const path = require('path');

        const mainfolder = path.join(__dirname, 'images/jpg');
        const subfolders = ['Nature', 'Props', 'Scene'];
        const imagePaths = {};

        for (const subfolder of subfolders) {
          const subfolderPath = path.join(mainfolder, subfolder);
          console.log(`subfolderPath: ${subfolderPath}`);
          try {
            const allFiles = fs.readdirSync(subfolderPath);
            console.log(`allFiles: ${allFiles}`);
            const jpgFiles = allFiles.filter((file) => file.endsWith('.jpg'));
            console.log(`jpgFiles: ${jpgFiles}`);
            const jpgPaths = jpgFiles.map((file) => path.join(subfolderPath, file));
            console.log(`jpgPaths: ${jpgPaths}`);

            imagePaths[subfolder] = jpgPaths;
            console.log(`imagePaths: ${imagePaths}`);
          } catch (error) {
            console.log(`Error reading image files in ${subfolder}:`);
          }
        }

        const jsonContent = JSON.stringify(imagePaths, null, 2);
        console.log(`jsonContent: ${jsonContent}`);
        fs.writeFileSync('imagesUrls.json', jsonContent);
        EOF

    - name: Commit and push changes
      run: |
        git config --global user.email "github-actions@github.com"
        git config --global user.name "GitHub Actions"
        git add imagesUrls.json
        git commit -m "Update imagesUrls.json"
        git push


